#
# A fatal error has been detected by the Java Runtime Environment:
#
#  EXCEPTION_STACK_OVERFLOW (0xc00000fd) at pc=0x00007ff8b298cbc3, pid=20508, tid=4228
#
# JRE version: OpenJDK Runtime Environment (21.0+35) (build 21+35-2513)
# Java VM: OpenJDK 64-Bit Server VM (21+35-2513, mixed mode, sharing, tiered, compressed oops, compressed class ptrs, g1 gc, windows-amd64)
# Problematic frame:
# V  [jvm.dll+0x3dcbc3]
#
# No core dump will be written. Minidumps are not enabled by default on client versions of Windows
#
# If you would like to submit a bug report, please visit:
#   https://bugreport.java.com/bugreport/crash.jsp
#

---------------  S U M M A R Y ------------

Command Line: --add-opens=java.base/java.util=ALL-UNNAMED --add-opens=java.base/java.lang=ALL-UNNAMED --add-opens=java.base/java.lang.invoke=ALL-UNNAMED --add-opens=java.prefs/java.util.prefs=ALL-UNNAMED --add-opens=java.base/java.nio.charset=ALL-UNNAMED --add-opens=java.base/java.net=ALL-UNNAMED --add-opens=java.base/java.util.concurrent.atomic=ALL-UNNAMED -XX:MaxMetaspaceSize=384m -XX:+HeapDumpOnOutOfMemoryError -Xms256m -Xmx512m -Dfile.encoding=windows-1252 -Duser.country=US -Duser.language=en -Duser.variant -javaagent:C:\Users\TU\.gradle\wrapper\dists\gradle-8.5-bin\5t9huq95ubn472n8rpzujfbqh\gradle-8.5\lib\agents\gradle-instrumentation-agent-8.5.jar org.gradle.launcher.daemon.bootstrap.GradleDaemon 8.5

Host: Intel(R) Core(TM) i7-9750H CPU @ 2.60GHz, 12 cores, 15G,  Windows 10 , 64 bit Build 17763 (10.0.17763.4720)
Time: Mon Apr  1 21:20:29 2024 SE Asia Standard Time elapsed time: 2096.696138 seconds (0d 0h 34m 56s)

---------------  T H R E A D  ---------------

Current thread (0x0000020127b6cef0):  JavaThread "Cache worker for file hash cache (D:\TaiLieu\Java-Web\Lab-TH\Lab07\52100138\Final_DN\.gradle\8.5\fileHashes)"        [_thread_in_vm, id=4228, stack(0x000000151a400000,0x000000151a500000) (1024K)]

Stack: [0x000000151a400000,0x000000151a500000],  sp=0x000000151a4ff9d0,  free space=1022k
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
V  [jvm.dll+0x3dcbc3]
V  [jvm.dll+0x6c8c52]
V  [jvm.dll+0x3dd86b]
V  [jvm.dll+0x3ddaf7]
V  [jvm.dll+0x470b85]
V  [jvm.dll+0x3eef66]
V  [jvm.dll+0x7fd2c8]
